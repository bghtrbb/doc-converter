{
    "AWSTemplateFormatVersion" : "2010-09-09",
    
    "Description" : "CloudFormation template for creating a doc-converter server",

    "Parameters" : {
	"InstanceType"       : { "Type" : "String", "Default" : "t2.micro" },
	"LoVersion"          : { "Type" : "String", "Default" : "5.1.0" },
	"LoRelease"          : { "Type" : "String", "Default" : "3" },
	"Region"             : { "Type" : "String", "Default" : "us-east" },
	"SubnetId"           : { "Type" : "String", "Default" : "mySubnetId" },
	"VpcId"              : { "Type" : "String" ,"Default" : "myVpcId" },
	"ImageId"            : { "Type" : "String", "Default" : "ami-e3106686" },
	"KeyName"            : { "Type" : "String", "Default" : "myKey" },
	"ServerName"         : { "Type" : "String", "Default" : "libreoffice-doc-converter" },
	"EC2Role"            : { "Type" : "String", "Default" : "bucket-writer" },
	"RPMUrl"             : { "Type" : "String", "Default" : "http://doc-converter.s3-website-us-east-1.amazonaws.com/" },
	"PublicIpEnabled"    : { "Type" : "String", "Default" : "true" }
    },

    "Resources" : {
        "InstanceProfile" : { 
            "Type" : "AWS::IAM::InstanceProfile",
            "Properties" : {
               "Path" : "/",
		"Roles" : [{ "Ref" : "EC2Role"}]
            }
        },

	"DocConverterSecurityGroup" : {
	    "Type" : "AWS::EC2::SecurityGroup",
	    "Properties" : {
		"GroupDescription" : "doc-converter security group",
		"VpcId" : { "Ref" : "VpcId" },
                "Tags"  : [ { "Key" : "Name", "Value" : "sg-doc-converter"} ],
		"SecurityGroupIngress" : [
		    {
			"IpProtocol" : "tcp",
			"FromPort" : "80",
			"ToPort" : "80",
			"CidrIp" : "0.0.0.0/0"
		    },
		    {
			"IpProtocol" : "tcp",
			"FromPort" : "22",
			"ToPort" : "22",
			"CidrIp" : "0.0.0.0/0"
		    }],
		"SecurityGroupEgress" : [
		    {
			"IpProtocol" : "tcp",
			"FromPort" : "-1",
			"ToPort" : "-1",
			"CidrIp" : "0.0.0.0/0"
		    }]
	    }
	},
        "DocConverter": {  
            "Type": "AWS::EC2::Instance",
            "Metadata" : {
                "Comment1" : "Install packages and fonts",
                "Comment2" : "",

                "AWS::CloudFormation::Init" : {
                    "configSets" : { 
                        "Config" : ["config"]
                    },
                    "config" : {

                        "packages" : {
                            "yum" : {
                            }
                        }
                    }
                }
            },

            "Properties": {

		"NetworkInterfaces" : [
		    {
			"GroupSet"                 : [ { "Fn::GetAtt" : [ "DocConverterSecurityGroup", "GroupId" ]} ],
			"AssociatePublicIpAddress" : { "Ref" : "PublicIpEnabled" },
			"DeviceIndex"              : "0",
			"DeleteOnTermination"      : "true",
			"SubnetId"                 : { "Ref" : "SubnetId" }
		    }
		],
                "ImageId"            : { "Ref" : "ImageId" },
                "InstanceType"       : { "Ref" : "InstanceType" },
                "IamInstanceProfile" : { "Ref" : "InstanceProfile" },
                "KeyName"            : { "Ref" : "KeyName"},
                "Tags"               : [ { "Key" : "Name", "Value" : { "Ref" : "ServerName"} } ],
                "UserData"           : { "Fn::Base64" : { "Fn::Join" : ["", [
                    "#!/bin/bash -v\n",
                    "\n",
                    "# Helper function\n",
                    "function error_exit\n",
                    "{\n",
                    "  /opt/aws/bin/cfn-signal -e 1 -r \"$1\" '", { "Ref" : "WaitHandle" }, "'\n",
                    "  exit 1\n",
                    "}\n",
		    "yum update -y\n",
                    "# Install packages\n",
                    "/opt/aws/bin/cfn-init -s ", { "Ref" : "AWS::StackId" }, " -r DocConverter ", "-c Config ",
                    "    --region ", { "Ref" : "AWS::Region" }, " || error_exit 'Failed to run cfn-init'\n",
                    "\n",
		    "# setup doc-converter repo and install package\n",
		    "yum-config-manager --nogpgcheck --add-repo ", { "Ref" : "RPMUrl" },"\n",
		    "yum install --nogpgcheck -y doc-converter\n",
		    "# Adbobe Japanese font fix\n",
		    "cat /usr/share/doc-converter/cidfmap.local >> /etc/ghostscript/8.70/cidfmap.local\n",
		    "# download & install LibreOffice 5\n",
		    "/usr/bin/libreoffice-download -r ",{ "Ref" : "LoRelease"}, " -v ", {"Ref" : "LoVersion"}, " || error_exit 'LibreOffice download error'\n", 
		    "/sbin/service httpd restart\n",
                    "\n",
                    "/opt/aws/bin/cfn-signal -e 0 -r \"Setup complete\" '", { "Ref" : "WaitHandle" }, "'\n"
                ]]}}
            }
        },

        "WaitHandle" : {
            "Type" : "AWS::CloudFormation::WaitConditionHandle"
        },

        "WaitCondition" : {
            "Type" : "AWS::CloudFormation::WaitCondition",
            "DependsOn" : "DocConverter",
            "Properties" : {
                "Handle" : {"Ref" : "WaitHandle"},
                "Timeout" : "600"
            }
        }
    },
    
    "Outputs" : {
        "DocConverterIp" : { 
	    "Value" : { "Fn::GetAtt" : [ "DocConverter", "PrivateIp" ] },
	    "Description" : "Private IP of instance"
	},
	"DocConverterPublicIp" : {
	    "Value" : { "Fn::GetAtt" : [ "DocConverter", "PublicIp" ] },
	    "Description" : "Public IP of instance"
	},
        "WebsiteURL" : {
	    "Value" : { "Fn::Join" : ["", ["http://", { "Fn::GetAtt" : [ "DocConverter", "PrivateIp" ]}]] },
	    "Description" : "URL for newly created doc-converter"
        }
    }
}
